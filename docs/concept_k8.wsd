@startuml

skinparam linetype ortho
'skinparam linetype polyline

' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

' global definition
!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

' k8s specific components
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesRs.puml
!includeurl KubernetesPuml/OSS/KubernetesPsp.puml
!includeurl KubernetesPuml/OSS/KubernetesPv.puml
!includeurl KubernetesPuml/OSS/KubernetesPvc.puml

actor "user" as user



Cluster_Boundary(cluster, "k8s"){
    Namespace_Boundary(ns, "influxdb") {
        KubernetesPod(influxdb,"influxdb","")
    }
    Namespace_Boundary(ns2, "forecast") {
        KubernetesPod(model_maker,"モデル作成\n(4 Hour)","")
        KubernetesPod(forecaster,"予測\n(4 Hour)","")
        KubernetesPod(model_maker2,"モデル作成\n(Day)","")
        KubernetesPod(forecaster2,"予測\n(Day)","")
        ' KubernetesRs(modelrs,"model_maker","")
        ' KubernetesRs(forecastrs,"forecaster","")
    }
    Namespace_Boundary(ns3,"rlearn"){
        KubernetesPod(ml,"強化学習\ntype 1","")
        KubernetesPod(ml2,"強化学習\ntype 2", "")
        ' KubernetesRs(mlrs,"ML base helm","")
    }
    Namespace_Boundary(monitoring,"monitoring"){
        KubernetesPod(grafana,"grafana","")
    }
    Namespace_Boundary(wine,"mt5"){
        KubernetesPod(mt5,"wine MT5","")
    }
}
Rel(influxdb,grafana," ")

Rel(influxdb,model_maker," ")
Rel(influxdb,forecaster," ")

Rel_L(model_maker,forecaster,"model")
Rel(influxdb,model_maker2," ")
Rel(influxdb,forecaster2," ")
Rel_L(model_maker2,forecaster2,"model")

Rel_U(forecaster,influxdb,"予測")
Rel_U(forecaster2,influxdb,"予測")

Rel(influxdb,ml," ")
Rel(influxdb,ml2," ")

' Rel_U(mlrs,ml," ")
' Rel_U(mlrs,ml2," ")

'Rel_R(ml,user,"notify")
'Rel_R(ml2,user,"notfiy")

Rel_L(ml,mt5,"シグナル")
Rel(ml2,mt5,"シグナル")

'Rel_R(grafana,user,"visualization")


mt5 --> user
grafana -d-> user : 可視化・アラート
ml -r-> grafana      : シグナル
ml2 -r-> grafana     : シグナル

'Rel(mt5,user," ")

' Rel_U(modelrs,model_maker," ")
' Rel_U(modelrs,model_maker2," ")

' Rel_U(forecastrs,forecaster," ")
' Rel_U(forecastrs,forecaster2," ")

Rel(mt5,influxdb,"時系列データ")



'package other_datasource{
'    usecase "other data source" as od
'}
'Rel_R(od,influxdb," ")

@enduml
